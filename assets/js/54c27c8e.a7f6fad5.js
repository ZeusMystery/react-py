"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[360],{3905:(e,r,t)=>{t.r(r),t.d(r,{MDXContext:()=>l,MDXProvider:()=>u,mdx:()=>h,useMDXComponents:()=>d,withMDXComponents:()=>c});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(){return i=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},i.apply(this,arguments)}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){return function(r){var t=d(r.components);return n.createElement(e,i({},r,{components:t}))}},d=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):p(p({},r),e)),t},u=function(e){var r=d(e.components);return n.createElement(l.Provider,{value:r},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=d(t),u=a,m=c["".concat(o,".").concat(u)]||c[u]||g[u]||i;return t?n.createElement(m,p(p({ref:r},l),{},{components:t})):n.createElement(m,p({ref:r},l))}));function h(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var p={};for(var s in r)hasOwnProperty.call(r,s)&&(p[s]=r[s]);p.originalType=e,p[m]="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=t[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8602:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const i={sidebar_position:3},o="Using Packages",p={unversionedId:"examples/using-packages",id:"examples/using-packages",title:"Using Packages",description:"Python standard library",source:"@site/docs/examples/using-packages.md",sourceDirName:"examples",slug:"/examples/using-packages",permalink:"/react-py/docs/examples/using-packages",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Interrupting Execution",permalink:"/react-py/docs/examples/interrupting-execution"}},s={},l=[{value:"Python standard library",id:"python-standard-library",level:2},{value:"Pyodide official packages",id:"pyodide-official-packages",level:2},{value:"Installing packages with micropip",id:"installing-packages-with-micropip",level:2}],c={toc:l};function d(e){let{components:r,...t}=e;return(0,a.mdx)("wrapper",(0,n.default)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.mdx)("h1",{id:"using-packages"},"Using Packages"),(0,a.mdx)("h2",{id:"python-standard-library"},"Python standard library"),(0,a.mdx)("p",null,"The Python standard library is available without needing to install any packages, ",(0,a.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library/"},"view the full list here"),"."),(0,a.mdx)("p",null,"Example using ",(0,a.mdx)("a",{parentName:"p",href:"https://docs.python.org/3/library/uuid.html"},"uuid"),"."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"import uuid\n\nprint(uuid.uuid4())\n")),(0,a.mdx)("h2",{id:"pyodide-official-packages"},"Pyodide official packages"),(0,a.mdx)("p",null,"There is a list of official packages included with Pyodide, ",(0,a.mdx)("a",{parentName:"p",href:"https://pyodide.org/en/stable/usage/packages-in-pyodide.html"},"view the full list here"),"."),(0,a.mdx)("p",null,"These packages can be imported either globally through the provider, or per hook usage. For more info, see the ",(0,a.mdx)("a",{parentName:"p",href:"../introduction/api-reference"},"API reference docs"),"."),(0,a.mdx)("p",null,"Example using ",(0,a.mdx)("a",{parentName:"p",href:"https://pypi.org/project/asciitree/"},"asciitree"),"."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},"from asciitree import LeftAligned\nfrom collections import OrderedDict as OD\n\ntree = {\n    'asciitree': OD([\n        ('sometimes',\n            {'you': {}}),\n        ('just',\n            {'want': OD([\n                ('to', {}),\n                ('draw', {}),\n            ])}),\n        ('trees', {}),\n        ('in', {\n            'your': {\n                'browser': {}\n            }\n        })\n    ])\n}\n\ntr = LeftAligned()\nprint(tr(tree))\n")),(0,a.mdx)("h2",{id:"installing-packages-with-micropip"},"Installing packages with micropip"),(0,a.mdx)("p",null,"Micropip can be used to install pure Python packages with wheels available on PyPI ",(0,a.mdx)("a",{parentName:"p",href:"https://pyodide.org/en/stable/usage/loading-packages.html#installing-wheels-from-arbitrary-urls"},"or from other URLs"),"."),(0,a.mdx)("p",null,"Like the official packages, these packages can also be imported either globally through the provider, or per hook usage. For more info, see the ",(0,a.mdx)("a",{parentName:"p",href:"../introduction/api-reference"},"API reference docs"),"."),(0,a.mdx)("p",null,"Example using ",(0,a.mdx)("a",{parentName:"p",href:"https://pypi.org/project/python-cowsay/"},"python-cowsay"),"."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-python"},'from cowsay import cowsay\n\nmessage = """\nThe most remarkable thing about my mother is that for thirty years she served\nthe family nothing but leftovers.  The original meal has never been found.\n        -- Calvin Trillin\n""".strip()\nprint(cowsay(message))\n')))}d.isMDXComponent=!0}}]);