"use strict";(self.webpackChunkreact_py_docs=self.webpackChunkreact_py_docs||[]).push([[743],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>c,mdx:()=>y,useMDXComponents:()=>u,withMDXComponents:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),m=function(e){return function(n){var t=u(n.components);return r.createElement(e,a({},n,{components:t}))}},u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",x={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=u(t),c=i,s=m["".concat(o,".").concat(c)]||m[c]||x[c]||a;return t?r.createElement(s,l(l({ref:n},p),{},{components:t})):r.createElement(s,l({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[s]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},6432:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={sidebar_position:3},o="API Reference",l={unversionedId:"introduction/api-reference",id:"introduction/api-reference",title:"API Reference",description:"Python provider",source:"@site/docs/introduction/api-reference.md",sourceDirName:"introduction",slug:"/introduction/api-reference",permalink:"/react-py/docs/introduction/api-reference",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/react-py/docs/introduction/usage"},next:{title:"Basic Example",permalink:"/react-py/docs/examples/basic-example"}},d={},p=[{value:"Python provider",id:"python-provider",level:2},{value:"usePython hook",id:"usepython-hook",level:2},{value:"runPython",id:"runpython",level:3},{value:"stdout",id:"stdout",level:3},{value:"stderr",id:"stderr",level:3},{value:"isLoading",id:"isloading",level:3},{value:"isRunning",id:"isrunning",level:3},{value:"interruptExecution",id:"interruptexecution",level:3}],m={toc:p};function u(e){let{components:n,...t}=e;return(0,i.mdx)("wrapper",(0,r.default)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"api-reference"},"API Reference"),(0,i.mdx)("h2",{id:"python-provider"},"Python provider"),(0,i.mdx)("p",null,"Props which can be provided to the ",(0,i.mdx)("inlineCode",{parentName:"p"},"<PythonProvider>")," component."),(0,i.mdx)("table",null,(0,i.mdx)("thead",{parentName:"table"},(0,i.mdx)("tr",{parentName:"thead"},(0,i.mdx)("th",{parentName:"tr",align:null},"Prop"),(0,i.mdx)("th",{parentName:"tr",align:null},"Required"),(0,i.mdx)("th",{parentName:"tr",align:null},"Type"),(0,i.mdx)("th",{parentName:"tr",align:null},"Default"),(0,i.mdx)("th",{parentName:"tr",align:null},"Description"))),(0,i.mdx)("tbody",{parentName:"table"},(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"timeout"),(0,i.mdx)("td",{parentName:"tr",align:null},"No"),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"number")),(0,i.mdx)("td",{parentName:"tr",align:null},"0"),(0,i.mdx)("td",{parentName:"tr",align:null},"Time in ms until a running instance is terminated, 0 means there is no time limit.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"lazy"),(0,i.mdx)("td",{parentName:"tr",align:null},"No"),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,i.mdx)("td",{parentName:"tr",align:null},"false"),(0,i.mdx)("td",{parentName:"tr",align:null},"If true, prevents the web worker from spawning until ",(0,i.mdx)("inlineCode",{parentName:"td"},"runPython")," is called for the first time.")),(0,i.mdx)("tr",{parentName:"tbody"},(0,i.mdx)("td",{parentName:"tr",align:null},"terminateOnCompletion"),(0,i.mdx)("td",{parentName:"tr",align:null},"No"),(0,i.mdx)("td",{parentName:"tr",align:null},(0,i.mdx)("inlineCode",{parentName:"td"},"boolean")),(0,i.mdx)("td",{parentName:"tr",align:null},"false"),(0,i.mdx)("td",{parentName:"tr",align:null},"If true, the web worker will terminate on completion. Useful for preventing too many web workers running at once.")))),(0,i.mdx)("h2",{id:"usepython-hook"},"usePython hook"),(0,i.mdx)("h3",{id:"runpython"},"runPython"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"async (code: string) => void")),(0,i.mdx)("p",null,"Takes a string of Python code. Example:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-tsx"},'runPython(`pi = 3.141\nprint(f"Pi to two decimal places is: {pi:.2f}")`)\n// expected output: "Pi to two decimal places is: 3.14"\n')),(0,i.mdx)("h3",{id:"stdout"},"stdout"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"string")),(0,i.mdx)("p",null,"Python stdout."),(0,i.mdx)("h3",{id:"stderr"},"stderr"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"string")),(0,i.mdx)("p",null,"Python stderr."),(0,i.mdx)("h3",{id:"isloading"},"isLoading"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"boolean")),(0,i.mdx)("p",null,"True if the worker is still being initialised. False if ready."),(0,i.mdx)("h3",{id:"isrunning"},"isRunning"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"boolean")),(0,i.mdx)("p",null,"True if code is being executed. False if idle."),(0,i.mdx)("h3",{id:"interruptexecution"},"interruptExecution"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"() => void")),(0,i.mdx)("p",null,"Can be called to immediately interrupt ongoing execution. Will terminate the running worker and spawn a new one."))}u.isMDXComponent=!0}}]);